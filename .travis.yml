# After changing this file, check it on:
#   http://lint.travis-ci.org/
language: python

env:
  global:
    # Use non-interactive backend
    - MPLBACKEND: Agg
    - CYTHON_TRACE: 1

matrix:
  include:
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
           PLAT=manylinux1_x86_64
           MANYLINUX=0
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_i686
           PRE_CMD=linux32
           PLAT=manylinux1_i686
           MANYLINUX=0
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64
           PLAT=manylinux2010_x86_64
           MANYLINUX=0
    - sudo: required
      arch: arm64-graviton2
      group: edge
      virt: lxd
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2014_aarch64
           PLAT=manylinux2014_aarch64
           MANYLINUX=0
    - os: linux
      python: 3.6
      env:
        - NUMPYSPEC=numpy
        - CYTHONSPEC=cython
        - USE_WHEEL=1
        - LINUX_WHEEL=1
        - MANYLINUX=0
    - os: linux
      python: 3.7
      dist: xenial # travis-ci/travis-ci/issues/9815
      sudo: true
      env:
        - NUMPYSPEC=numpy
        - CYTHONSPEC=cython
        - USE_SDIST=1
        - USE_SCIPY=1
        - REFGUIDE_CHECK=1
        - MANYLINUX=0
    - os: linux
      python: 3.8
      dist: xenial # travis-ci/travis-ci/issues/9815
      sudo: true
      env:
        - NUMPYSPEC=numpy
        - CYTHONSPEC=cython
        - MANYLINUX=0
    - os: linux
      python: 3.9
      dist: xenial # travis-ci/travis-ci/issues/9815
      sudo: true
      env:
        - NUMPYSPEC=numpy
        - CYTHONSPEC=cython
        - MANYLINUX=0
    - os: osx
      osx_image: xcode10.2
      language: objective-c
      env:
        - USE_WHEEL=1
        - TRAVIS_PYTHON_VERSION=3.6
        - MAC_WHEEL=1
        - MANYLINUX=0
        - TOXENV=py36
    - os: osx
      osx_image: xcode10.2
      language: objective-c
      env:
        - USE_WHEEL=1
        - TRAVIS_PYTHON_VERSION=3.7
        - MAC_WHEEL=1
        - MANYLINUX=0
        - TOXENV=py37
    - os: osx
      osx_image: xcode10.2
      language: objective-c
      env:
        - USE_WHEEL=1
        - TRAVIS_PYTHON_VERSION=3.8
        - MAC_WHEEL=1
        - MANYLINUX=0
        - TOXENV=py38
    - os: osx
      osx_image: xcode11.6
      language: objective-c
      env:
        - USE_WHEEL=1
        - TRAVIS_PYTHON_VERSION=3.9
        - MAC_WHEEL=1
        - MANYLINUX=0
        - TOXENV=py39
cache: pip

before_install:
  - uname -a
  - df -h
  - ulimit -a
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then source util/travis_osx_install.sh; fi
  - ccache -s
  - |
    if [ "${MANYLINUX}" == "0" ]; then
        which python; python --version
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install $NUMPYSPEC
        pip install $CYTHONSPEC
        pip install pytest pytest-cov coverage codecov futures
        mkdir ${TRAVIS_BUILD_DIR}/wheelhouse
        pip install --upgrade auditwheel
    else
        docker pull $DOCKER_IMAGE
    fi
  - set -o pipefail
  - if [ "${USE_WHEEL}" == "1" ]; then pip install wheel; fi
  - if [ "${USE_SCIPY}" == "1" ]; then pip install scipy; fi
  - |
    if [ "${REFGUIDE_CHECK}" == "1" ]; then
        pip install sphinx numpydoc
    fi

script:
  # Define a fixed build dir so next step works
  - |
    if [ "${LINUX_WHEEL}" == "1" ]; then
        pip wheel . -v
    fi
  - |
    if [ "${MAC_WHEEL}" == "1" ]; then
       pip wheel . -v
       #delocate-listdeps pyedflib*.whl
       #delocate-wheel -v pyedflib*.whl
       #delocate-listdeps --all pyedflib*.whl
    fi
  - |
    if [ "${MANYLINUX}" == "1" ]; then
        docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/travis/build-wheels.sh
    elif [ "${USE_WHEEL}" == "1" ]; then
        # Need verbose output or TravisCI will terminate after 10 minutes
        # pip wheel . -v
        cp *.whl ${TRAVIS_BUILD_DIR}/wheelhouse/
        pip install pyEDFlib*.whl -v
        pushd demo
        pytest --pyargs pyedflib
        python ../pyedflib/tests/test_doc.py
        popd
    elif [ "${USE_SDIST}" == "1" ]; then
        python setup.py sdist
        # Move out of source directory to avoid finding local pyedflib
        pushd dist
        pip install pyEDFlib* -v
        pytest --pyargs pyedflib
        python ../pyedflib/tests/test_doc.py
        popd
    elif [ "${REFGUIDE_CHECK}" == "1" ]; then
        pip install -e . -v
        python util/refguide_check.py --doctests
    else
        CFLAGS="--coverage" python setup.py build --build-lib build/lib/ --build-temp build/tmp/
        CFLAGS="--coverage" pip install -e . -v
        python -m pytest --pyargs pyedflib --cov=pyedflib --cov-config=.coveragerc --cov-report=xml --verbose
    fi

after_success:
  - |
    if [ "${MANYLINUX}" == "0" ]; then
        # Travis CI has old gcov, needs object dir explicitly specified
        gcov --object-directory build/tmp/pyedflib/_extensions/c/ build/tmp/pyedflib/_extensions/c/*.o
        bash <(curl -s https://codecov.io/bash)
    fi

deploy:
  provider: releases
  api-key:
    secure: "gF0H+Zv5gRo6UT1MCF+46Dd26SVdf9L69ZdcZZaovb1TdXDyGeaf/SO7lUGaGhrCh96cmSj1T0EUQNh30amyCT9JmjbpUMRVHro3Opu1/EKvCgbQVqGK4+46hoWNuEsg0BCrRkGRNWVxQ1IlfFhaMiP58Yk8wZpYmWDvmAQoz4fdwkN6e1kUNxSnRiEB/ln4XAxnwVUj8WQSA9LRQkuwF3Ug7PMuDnaoIqUlGn3GiSZXXIzV7grT07+DS0+lTU4XN/RDxOh8y3MQqfN9QDv2ewR/EylkFM5e4MrxFDjXNsWD4oemCNeBBRVHbEU1wEKb7y5vhrunuXAdtZcjo7rZYnq1Wlj7EeRK0ZAJHImlA3kF5tuGbga4oXO0Xv0BuCnspbOStmC2rX5e1m57v0FNfRv2LyVjOsu9i6sEgZpOXDsJiGezkoGYyhU5lq8LwgCC4o2aDImOoj8/YpFRWXG6uwnuuk/2ELAElPJ6mqCRraUF4LZbC3Dz5iOPHagUizqBnTClQPphoiOClmPJxjBqoO62ldTflas0jA4bxv4dQY1P3RijfuJWY7pBkJ1W6++pEWr0gN4L4fJQjuyTFzi9KIYWfh5MU6ualxe6QjCjGaPWfjETS57qE6WC5zPK5Mg9a4yIgYO0bL5Eh/WXaK8j+0iNeBdI9jHegoBhCswIbK4="
  file: ${TRAVIS_BUILD_DIR}/wheelhouse/*
  skip_cleanup: true
  draft: true
  on:
    tags: true
